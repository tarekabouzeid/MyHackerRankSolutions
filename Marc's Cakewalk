import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void mergesort(int [] array)
    {
        int helper[] = new int[array.length];
        mergesort(array,helper,0,array.length-1);
    }
    public static void mergesort(int[] array, int[] helper,int low,int high)
    {
        if(low<high)
        {
            int mid =(low+high)/2;
            mergesort(array,helper,low,mid);
            mergesort(array,helper,mid+1,high);
            merge(array,helper,low,mid,high);
        }
    }
    public static void merge(int []array, int [] helper, int low,int mid,int high)
    {
        //step 1 copy
        for(int i=low;i<=high;i++)
            helper[i] = array[i];
        int helperleft = low;
        int helperright = mid+1;
        int current = low;
        while(helperleft<=mid&&helperright<=high)
        {
            if(helper[helperleft]>=helper[helperright])
            {
                array[current] = helper[helperleft];
                helperleft++;
            }
            else
            {
                array[current] = helper[helperright];
                helperright++;
            }
            current++;
        }
        int remaining = mid-helperleft;
        for(int i = 0 ; i<=remaining;i++)
            array[current+i] = helper[helperleft+i];
    }
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] calories = new int[n];
        for(int calories_i=0; calories_i < n; calories_i++){
            calories[calories_i] = in.nextInt();
        }
        // your code goes here
        mergesort(calories);
        long miles= 0;
        for(int i=0;i<calories.length;i++)
        {
            miles+=calories[i]*(Math.pow(2,i));
        }
        System.out.println(miles);
    }
}
